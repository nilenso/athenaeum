name: Build uberjar and deploy to staging

on: push

jobs:
  build-uberjar:
    runs-on: ubuntu-latest

    env:
      STAGING_CLIENT_ID: ${{secrets.STAGING_CLIENT_ID}}

    steps:
      - uses: actions/checkout@v2

      - name: Install frontend deps
        run: yarn install

      - name: Build the frontend
        run: yarn release

      - name: Install backend deps
        run: lein deps

      - name: Build uberjar
        run: lein uberjar

      - name: Zip uberjar + static files
        run: |
          mkdir uberstat
          mv target/athenaeum-uber.jar uberstat
          mv resources/public uberstat
          zip -r uberstat uberstat

      - name: Upload uberjar + static files
        uses: actions/upload-artifact@v2
        with:
          name: athenaeum-uberstat
          path: uberstat.zip

  deploy-to-staging:
    runs-on: ubuntu-latest
    needs: build-uberjar

    env:
      STAGING_USER: ${{secrets.STAGING_USER}}
      STAGING_HOST: ${{secrets.STAGING_HOST}}
      SSH_PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY}}
      PRIVATE_KEY_FILE: "ansible/private_key"
      INVENTORY: "ansible/staging"
      STAGING_CONFIG: ${{secrets.STAGING_CONFIG}}
      STAGING_CONFIG_FILE: "config/config.staging.edn"
      POSTGRES_STAGING_USER: ${{secrets.POSTGRES_STAGING_USER}}
      POSTGRES_STAGING_PWD: ${{secrets.POSTGRES_STAGING_PWD}}
      POSTGRES_STAGING_DB: ${{secrets.POSTGRES_STAGING_DB}}
      ANSIBLE_HOST_KEY_CHECKING: False

    steps:
      - uses: actions/checkout@v2

      - name: Download uberjar + static files
        uses: actions/download-artifact@v2
        with:
          name: athenaeum-uberstat
          path: resources

      - name: Unzip uberjar + static files
        run: unzip resources/uberstat

      - name: Create config file
        run: echo "$STAGING_CONFIG" >> "$STAGING_CONFIG_FILE"

      - name: Create inventory file
        run: |
          echo "[webservers]" > "$INVENTORY"
          echo "$STAGING_HOST" >> "$INVENTORY"
          chmod 600 "$INVENTORY"

      - name: Create private key file
        run: |
          echo "$SSH_PRIVATE_KEY" > "$PRIVATE_KEY_FILE"
          chmod 600 "$PRIVATE_KEY_FILE"

      - name: Deploy to staging
        run: |
          ansible-playbook \
          --user "$STAGING_USER" \
          --inventory "$INVENTORY" \
          --private-key "$PRIVATE_KEY_FILE" \
          --extra-vars "postgres_user=$POSTGRES_STAGING_USER" \
          --extra-vars "postgres_pwd=$POSTGRES_STAGING_PWD" \
          --extra-vars "postgres_db=$POSTGRES_STAGING_DB" \
          --verbose \
          --become \
          ansible/webserver.yml
